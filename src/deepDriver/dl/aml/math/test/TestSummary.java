package deepDriver.dl.aml.math.test;

public class TestSummary {
	
	public static void main(String[] args) {
		double [] arr = {57089593.95,56585100.65,45226430.68,39828851.94,33574438.56,32739706.38,30347917.39,28926226.55,27658727.58,24606866,24343843.43,23835363.4,23668868.6,21476358.41,21455192.53,18021631.59,16795623,16707449.21,16509778.45,15502912.92,15001163.72,13241889.43,12971557.04,12656572.1,11626901.41,11278935.09,10784311.55,10686617.64,10602051.24,10557013.17,10492474.88,10261078.93,10163133.92,9933783.14,9886738.708,9732554.82,9701283.953,9539436.629,9403808.032,9355361,9206302.186,9088528.514,9081565.132,8936289.784,8926407.225,8875948.143,8751847.667,8620002.94,8609071,8607977.941,8441018.714,8311219.063,8133040.65,7985747,7907044.929,7862692.9,7791067.583,7589576.795,7502034.438,7286011.262,7034620.244,6969523.528,6866634.512,6859692.276,6713246.674,6657852.567,6609620.077,6590869.932,6304547.972,6276323.509,6189395.075,6093875.45,6037641.362,6018391.571,5854185.246,5801065.286,5758235.714,5615770.075,5596766.78,5584982.739,5572662.317,5352409.515,5310567.825,5267715.243,5263913.647,5261934.313,5109919.095,4981481.25,4923726.033,4877783.611,4805203.317,4776580.735,4685316.725,4670076.098,4630370.758,4612559.175,4576510.6,4573416.844,4561549,4534210.7,4495457.864,4471831.587,4411984.354,4347865.462,4291162.027,4241301.925,4204346.176,4123243.794,4114328.754,4042228.807,4039078.567,4005166.762,4000077.775,3944172.05,3907485.314,3891994.885,3877134.043,3876934.575,3862000.775,3853679.5,3806856.389,3792740.6,3787545.048,3783155.7,3765439.735,3756548.519,3725410.02,3709109.314,3705342.706,3636432.725,3603710.735,3595719.156,3563456.974,3539736.56,3528092.216,3523290.811,3499964.024,3479504.417,3381986.421,3339497.833,3294912.686,3247496.298,3217096.75,3188980.824,3178433.861,3162516.5,3133314.147,3112656.6,3039673.917,3027733.353,3020690.775,2970921.389,2940772.65,2864805.7,2803174,2774802.139,2749485.2,2692188.286,2655605.571,2624995.5,2546043.813,2538404.029,2505593.211,2486748.725,2455083.833,2443803.721,2442304.633,2362666.36,2332188.528,2304668.944,2292285.15,2259527.156,2257179.721,2228906.257,2208214.561,2184780.841,2158076.367,2156923.976,2144715.1,2109964,2099769.684,2090785.208,2086293.575,2070636.415,2036748.524,2012662.209,1990076.911,1973980.538,1938411.967,1909697.1,1897318.018,1888118.833,1883309.263,1873635.375,1866571.833,1853379.975,1845621.905,1832853.531,1831622.231,1814399.359,1800842.765,1715411.949,1709855.028,1691211.094,1687024.484,1669233.585,1654738.7,1653980.72,1636532.727,1634066.2,1624640.743,1584288.152,1573304.179,1568860.775,1562831.939,1562831.6,1557550.675,1546928.722,1542513.921,1516209.721,1485142.583,1408530.3,1407096.688,1401317.389,1385989.788,1385446.758,1380486.429,1379905.667,1366205.152,1306473.385,1296903.885,1296595.033,1291946.368,1249040.533,1233518.103,1226121.786,1189966.394,1182006.231,1173508.938,1163596.333,1159930.842,1149923.667,1124071.743,1078943.025,1057969.306,1038281.556,1036929.35,1028175.4,1005395.067,976513.3611,964813.6364,964291.375,960870.2333,959748.8,939051.2826,924622.7,834381.8065,832691.9167,825890.4444,825516.1622,817768.8108,809264.1316,784822.5938,765252.2121,763582.1111,759820.2105,748219.025,741378.3559,726326.5,714685.9302,709359.575,708499.2059,705695.6154,700444.0294,693065.7333,692355.175,688606.2381,683274.3,682529.1579,661574.88,655098.9667,653085.225,649503.8611,634448.6111,630190.6923,627212.0333,621931.5,605736.3714,595513.7447,594534.1786,584259.825,581320.3438,565213.9,551690.0294,531340.4516,521443.0526,498099.1,460093.6333,431059.35,425038.1071,401325.75,401070.4167,382068.4571,379341.3889,377108.5094,375149.5556,372883.1333,337647.2857,327838.8367,326078.9,325240.1111,307905.8611,307536.4667,307179.7273,284132.5,283986.0263,282946.7333,273989.4063,270662.4048,268305.7907,267202.0882,264946.6,264914.7,261382.7742,259684.4688,259508.3333,258910.7857,256483.6944,254063.7,243919.3333,233476.125,231486.6176,230289.5278,223062.037,204893.9714,202191.6923,200807.775,188457.9737,184268.0303,182010.5667,177598.25,172418.0606,150819.25,143487.2121,137218.2222,136532.6786,134166.7,116884.16,113546.6071,113448.7,106860.6563,97305.58333,91949.09375,84231.96774,83015.65854,78941.05263,78242.78125,72962.70588,69545.22222,65111.75926,64813.47368,60740.04878,56889.05714,50604.4,43649.03333,39086.475,35246.71053,26673.5,22334.21875,17533.05556};
		int sec = 500;
		int [] hs = new int[sec]; 
		double max = arr[0];
		double min = arr[0];
		for (int i = 0; i < arr.length; i++) {
			if (arr[i] > max) {
				max = arr[i];
			}			
			if (arr[i] < min) {
				min = arr[i];
			}
		}
		
		double avg = (max - min)/(double)sec;
		for (int i = 0; i < arr.length; i++) {
			double a = (arr[i]-min)/avg; 
			int j = (int) a;
			if ((double)j * avg + min < arr[i]) {
				j = j + 1;
			}
			if (j <= 0) {
				j = 1;
			}
			if (j >= hs.length) {
				j = hs.length;
			}
			hs[j-1]++;
		}
		
		for (int i = 0; i < hs.length; i++) {
			System.out.println(hs[i]);
		}
		
	}

}
